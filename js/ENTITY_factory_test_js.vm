#set( $_ = "$" )
'use strict';

/* jasmine specs for controllers go here */

describe('services', function(){
  beforeEach(module('${fn.uncapitalize($entity.name)}.module'));
  
  describe('${entity.name}', function(){
	var ${_}httpBackend, ${entity.name}, restURL;
	  
    beforeEach(inject(function(${_}injector) {
    	${_}httpBackend = ${_}injector.get('${_}httpBackend');
    	${entity.name} = ${_}injector.get('${entity.name}');
        restURL = ${_}injector.get('restURL');
    }));

    afterEach(function() {
    	${_}httpBackend.verifyNoOutstandingExpectation();
    	${_}httpBackend.verifyNoOutstandingRequest();
    });
    
    it('getAll', function() {
    	${_}httpBackend.when('GET', restURL+'/${fn.uncapitalize($entity.name)}').respond("test");
    	${entity.name}.getAll().then(function(response) {
        	expect(response.status).toBe(200);
    		expect(response.data).toBe("test");
    	});
    	${_}httpBackend.flush();
    });
    
    it('get', function() {
    	${_}httpBackend.when('GET', restURL+'/${fn.uncapitalize($entity.name)}/1').respond("test");
    	${entity.name}.get('1').then(function(response) {
        	expect(response.status).toBe(200);
    		expect(response.data).toBe("test");
    	});
    	${_}httpBackend.flush();
    });
    
    it('create throws exception : id not defined', function() {
    	try{
    		${entity.name}.create({id:null,name:'${fn.uncapitalize($entity.name)}'});
    		${_}httpBackend.flush();
    	} catch(errors) {
    		expect(errors[0]).toBe('${fn.uncapitalize($entity.name)}.id.not.defined');
    	}
    });
    
    it('create', function() {
    	${_}httpBackend.when('POST', restURL+'/${fn.uncapitalize($entity.name)}').respond("test");
    	${entity.name}.create({id:'1',name:'${fn.uncapitalize($entity.name)}'}).then(function(response) {
        	expect(response.status).toBe(200);
    		expect(response.data).toBe("test");
    	});
    	${_}httpBackend.flush();
    });
    
    it('update throws exception : id not defined', function() {
    	try{
    		${entity.name}.update({id:null,name:'${fn.uncapitalize($entity.name)}'});
    		${_}httpBackend.flush();
    	} catch(errors) {
    		expect(errors[0]).toBe('${fn.uncapitalize($entity.name)}.id.not.defined');
    	}
    });
    
    it('update', function() {
    	${_}httpBackend.when('PUT', restURL+'/${fn.uncapitalize($entity.name)}/1').respond("test");
    	${entity.name}.update({id:'1',name:'${fn.uncapitalize($entity.name)}'}).then(function(response) {
        	expect(response.status).toBe(200);
    		expect(response.data).toBe("test");
    	});
    	${_}httpBackend.flush();
    });
    
    it('delete', function() {
    	${_}httpBackend.when('DELETE', restURL+'/${fn.uncapitalize($entity.name)}/1').respond("test");
    	${entity.name}.delete('1').then(function(response) {
        	expect(response.status).toBe(200);
    		expect(response.data).toBe("test");
    	});
    	${_}httpBackend.flush();
    });
  });
});