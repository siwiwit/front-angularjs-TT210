#set( $uncapitalizedEntityName = $fn.uncapitalize($entity.name) )
#set( $_= "$" )
##--------------------------------------------------------------------------------------------------------
##--------------------------------------------------------------------------------------------------------
## Key fields = fields in Primary Key    
#set( $keyFields = $entity.keyAttributes )
##--------------------------------------------------------------------------------------------------------
## Data fields = fields not in Primary Key    
#set( $dataFields = $entity.nonKeyAttributes )
##--------------------------------------------------------------------------------------------------------
## All fields ( ordered fiels : 1) fields in Primary Key 2) fields not in primary key    
#set( $allFields = $fn.concatLists($keyFields, $dataFields) )
##--------------------------------------------------------------------------------------------------------
#set( $referencedEntities = $entity.referencedEntityTypes() )## All referenced entities (PK and NON PK)
##--------------------------------------------------------------------------------------------------------
'use strict';

/* Controller for ${entity.name} */

myAppControllers.controller('${entity.name}Ctrl', ['${entity.name}', '${_}scope', '${_}routeParams', '${_}http', '${_}location', '${_}cookies', function(${entity.name}, ${_}scope, ${_}routeParams, ${_}http, ${_}location, ${_}cookies) {
	
    // mode

    ${_}scope.mode = null;
    
	// data

    ${_}scope.${fn.uncapitalize($entity.name)}s = {list: []};
    ${_}scope.${fn.uncapitalize($entity.name)} = null;

	// referencies entities

	${_}scope.items = {};
#foreach( $ref in $referencedEntities )
	${_}scope.items.${fn.uncapitalize($ref)}s = [];
#end
#foreach( $ref in $referencedEntities )
	${_}scope.loadAll${ref} = function() {
        ${_}http({method: 'GET', url: baseURL + '/items/${fn.uncapitalize($ref)}'}).
        success(function(data, status, headers, config) {
            ${_}scope.items.${fn.uncapitalize($ref)}s = data;
        }).
        error(${_}scope.manageError);
    };
#end
	
	${_}scope.loadAllReferencies = function() {
#foreach( $ref in $referencedEntities )
		${_}scope.loadAll${ref}();
#end
    };
    
    // message

	${_}scope.message = {};
    ${_}scope.message.successs = [];
    ${_}scope.message.errors = [];
	${_}scope.cleanMessage = function() {
        ${_}scope.message.successs = [];
        ${_}scope.message.errors = [];
    };
    ${_}scope.addSuccess = function(success) {
        ${_}scope.message.successs.push(success);
    };
    ${_}scope.addError = function(error) {
        ${_}scope.message.errors.push(error);
    };
	${_}scope.manageError = function(http) {
		if( http.status === 404 ) {
			if( http.data == null || http.data === "" ) {
				${_}scope.addError('The server is not responding');
			} else {
				${_}scope.addError('Invalid URL : ' + http.config.url);
			}
		} else if( http.status === 400 ) {
			if(http.data == null) {
				${_}scope.addError('Bad URL : ' + http.config.url);
			} else {
				${_}scope.addError(http.data);
			}
		} else {
        	if( http.data != null && http.data !== "" ) {
            	${_}scope.addError(http.data);
        	}
		}
    };
	${_}scope.manageException = function(error) {
		${_}scope.addError(error);
    };

	// display data

	
    ${_}scope.clean${entity.name}sInScope = function() {
        ${_}scope.${fn.uncapitalize($entity.name)}s.list = [];
    };
    ${_}scope.clean${entity.name}InScope = function() {
        ${_}scope.${fn.uncapitalize($entity.name)} = null;
    };
    ${_}scope.setAll${entity.name}sInScope = function(${fn.uncapitalize($entity.name)}s) {
        ${_}scope.${fn.uncapitalize($entity.name)}s.list = ${fn.uncapitalize($entity.name)}s;
    };
    ${_}scope.add${entity.name}InScope = function(${fn.uncapitalize($entity.name)}) {
        ${_}scope.${fn.uncapitalize($entity.name)}s.list.push(${fn.uncapitalize($entity.name)});
    };
    ${_}scope.setOne${entity.name}InScope = function(${fn.uncapitalize($entity.name)}) {
        ${_}scope.${fn.uncapitalize($entity.name)} = ${fn.uncapitalize($entity.name)};
    };
    
    // refresh data

    ${_}scope.refresh${entity.name}List = function() {
    	try {
        	${_}scope.clean${entity.name}sInScope();
	        ${entity.name}.getAll().then(
				function(success) {
        	        ${_}scope.setAll${entity.name}sInScope(success.data);
            	}, 
	            ${_}scope.manageError);
    	} catch(ex) {
    		${_}scope.manageException(ex);
    	}
    }
    ${_}scope.refresh${entity.name} = function(${entity.keyAttributesNamesAsString(', ', '', '')}) {
    	try {
        	${_}scope.clean${entity.name}InScope();
	        ${entity.name}.get(${entity.keyAttributesNamesAsString(', ', '', '')}).then(
				function(success) {
        	        ${_}scope.setOne${entity.name}InScope(success.data);
            	}, 
	            ${_}scope.manageError);
    	  } catch(ex) {
        	${_}scope.manageException(ex);
    	}
    }

    // location

    ${_}scope.goTo${entity.name}List = function() {
        ${_}scope.refresh${entity.name}List();
        ${_}location.path('/${fn.uncapitalize($entity.name)}');
    }
    ${_}scope.goTo${entity.name} = function(${entity.keyAttributesNamesAsString(', ', '', '')}) {
        ${_}scope.refresh${entity.name}(${entity.keyAttributesNamesAsString(', ', '', '')});
        ${_}location.path('/${fn.uncapitalize($entity.name)}/'+${entity.keyAttributesNamesAsString("+'/'+", '', '')});
    }

    // Actions

    ${_}scope.save = function() {
    	try {
			${_}scope.cleanMessage();
			var save;
			if( ${_}scope.mode === 'create' ) {
        		save = ${entity.name}.create;
			} else {
				save = ${entity.name}.update;
			}
			save(${_}scope.${fn.uncapitalize($entity.name)}).then(
    	        function(success) {
	                ${_}scope.addSuccess('save ok');
                	${_}scope.setOne${entity.name}InScope(success.data);
            	},
        	    ${_}scope.manageError);
    	} catch(ex) {
        	${_}scope.manageException(ex);
    	}
    };
    ${_}scope.delete = function(${entity.keyAttributesNamesAsString(', ', '', '')}) {
	    try {
			${_}scope.cleanMessage();
    	    ${entity.name}.delete(${entity.keyAttributesNamesAsString(', ', '', '')}).then(
				function(success) {
                	${_}scope.goTo${entity.name}List();
            	}, 
                ${_}scope.manageError);
        } catch(ex) {
            ${_}scope.manageException(ex);
        }
    };
    
    // Main

	${_}scope.cleanMessage();
    
    if( ${_}location.path().endsWith('/new') ) {
        ${_}scope.mode = 'create';
		${_}scope.loadAllReferencies();
        ${_}scope.bookorderitem = null;
    } else if( ${entity.keyAttributesNamesAsString(' && ', '$routeParams.', ' != null')} ) {
		${_}scope.loadAllReferencies();
		${_}scope.refresh${entity.name}(${entity.keyAttributesNamesAsString(', ', '$routeParams.', '')});
    } else {
        ${_}scope.refresh${entity.name}List();
    }
    
    
}]);
